{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Suresh_FirstProject_Nest4.ipynb",
      "provenance": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "q3BIm0zK7m2G",
        "colab_type": "text"
      },
      "source": [
        "# **Assignment No.1**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JWAeKj9qwtmm",
        "colab_type": "code",
        "outputId": "04e29bfc-adad-4f57-bcd7-11afa0741ad2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        }
      },
      "source": [
        "print(\"First Assignment of Nest4Code\")"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "First Assignment of Nest4Code\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "UlzJcA_8wziw",
        "colab_type": "text"
      },
      "source": [
        "# Problem No.1"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-6YeUIVPxrh_",
        "colab_type": "text"
      },
      "source": [
        "QN: Swap Three Variables without temporary variables"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vDQbq065xFjg",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "a=1\n",
        "b=2\n",
        "c=5\n",
        "a,b,c=b,c,a\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "MoivNpziyxHg",
        "colab_type": "code",
        "outputId": "21d13884-ccd5-4f6d-b8a3-8f95c8015982",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "print(\"a \"+str(a))\n",
        "print(\"b \"+str(b))\n",
        "print(\"c \"+str(c))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "a 2\n",
            "b 1\n",
            "c 5\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "lJ7Km-wbwzmP",
        "colab_type": "text"
      },
      "source": [
        "#Problem No.2"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Mgx-iAwSxKjh",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "QN: To calculate area of the room"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Qys3BhYV5msn",
        "colab_type": "code",
        "outputId": "95b61758-0b2f-47a5-b6cd-985e69a00d09",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "length=float(input(\"Enter length of the Room:\"))\n",
        "width=float(input(\"Enter width of the Room:\"))\n",
        "area= length *width\n",
        "print(\"Area of the Room \" +str(area))\n"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter length of the Room:2\n",
            "Enter width of the Room:4\n",
            "Area of the Room 8.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "DE47YmQw5lcD",
        "colab_type": "code",
        "outputId": "e3b965b1-6695-45ce-d9b9-0d0beecf9881",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "length=float(input(\"Enter length of the Room:\"))\n",
        "width=float(input(\"Enter width of the Room:\"))\n",
        "area= length *width\n",
        "print(\"Area of the Room \" +str(round(area, 2)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter length of the Room:2.1\n",
            "Enter width of the Room:3.1\n",
            "Area of the Room 6.51\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gipyS1xQ6xSC",
        "colab_type": "code",
        "outputId": "7c2a2849-2678-4087-c6ec-4efe4acf518f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "length=float(input(\"Enter length of the Room:\"))\n",
        "width=float(input(\"Enter width of the Room:\"))\n",
        "area= length *width\n",
        "print(\"Area of the Room \" +str(round(area, 2)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter length of the Room:2\n",
            "Enter width of the Room:4.5\n",
            "Area of the Room 9.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "iCNsYawU7Btg",
        "colab_type": "code",
        "outputId": "4ae2a2ef-298d-410f-c7c2-9a74e3ca1465",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        }
      },
      "source": [
        "length=float(input(\"Enter length of the Room:\"))\n",
        "width=float(input(\"Enter width of the Room:\"))\n",
        "area= length *width\n",
        "print(\"Area of the Room \" +str(round(area, 2)))"
      ],
      "execution_count": 0,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Enter length of the Room:2.2\n",
            "Enter width of the Room:9\n",
            "Area of the Room 19.8\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NSDWJXvcQQNv",
        "colab_type": "text"
      },
      "source": [
        "#PROBLEM No.3"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1h04tRXp6i7h",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "Sum of first positive 'N' Integers"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZLdd2Iab6cHT",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "20ed20bd-f026-49f3-cd37-4f72f7aee499"
      },
      "source": [
        "n=int(input(\"enter a number: \"))\n",
        "sum_first_n = n*(n+1)/2\n",
        "print(\"Sum \"+str(sum_first_n))"
      ],
      "execution_count": 29,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter a number: 1\n",
            "Sum 1.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "henyPZ4MRirP",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "696cc886-8d42-4756-83d3-883705059ca9"
      },
      "source": [
        "n=int(input(\"enter a number: \"))\n",
        "sum_first_n = n*(n+1)/2\n",
        "print(\"Sum \"+str(sum_first_n))"
      ],
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter a number: 2\n",
            "Sum 3.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "xnUCjqnkRo2Y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "65a549bd-2ace-43b1-b268-b514c7ae0ef1"
      },
      "source": [
        "n=int(input(\"enter a number: \"))\n",
        "sum_first_n = n*(n+1)/2\n",
        "print(\"Sum \"+str(sum_first_n))"
      ],
      "execution_count": 31,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter a number: 10\n",
            "Sum 55.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nSYNp1edR0FH",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "8d6dfc57-8773-40de-d873-5c45ba6fc2c6"
      },
      "source": [
        "n=int(input(\"enter a number: \"))\n",
        "sum_first_n = int(n*(n+1)/2)\n",
        "print(\"Sum \"+str(sum_first_n))"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "enter a number: 25\n",
            "Sum 325\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "a3oKQJm4SCOH",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "GmA5bY9kR2mn",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "K71JXULC6Srz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "c6IRE4L76QTU",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "mTquYCtJ53bz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eAwIilIL5eiq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "wLoXExH20ZPd",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "G815YPiM0Hbw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "onaHIQY-0GoO",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "auPmBjXxz8k_",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "sSc1Z089z2Un",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}